from selenium import webdriver
from selenium.webdriver.chrome.options import Options
from selenium.webdriver.common.by import By
from selenium.webdriver.common.keys import Keys
from selenium.webdriver.support.ui import Select
import pytesseract
from PIL import Image, ImageFilter, ImageOps, ImageEnhance
import time
import os
import re

# ƒë∆∞·ªùng d·∫´n t·ªõi Tesseract
pytesseract.pytesseract.tesseract_cmd = r'C:\Program Files\Tesseract-OCR\tesseract.exe'

options = Options()
options.add_argument('--ignore-certificate-errors')

driver = webdriver.Chrome(options=options)

try:
    driver.get("https://www.csgt.vn/tra-cuu-phuong-tien-vi-pham.html")
    time.sleep(2)

    # T√¨m ph·∫ßn t·ª≠ captcha v√† ch·ª•p ·∫£nh
    captcha_element = driver.find_element(By.ID, "imgCaptcha")
    captcha_path = "captcha.png"
    captcha_element.screenshot(captcha_path)

    # M·ªü ·∫£nh v√† chuy·ªÉn sang ·∫£nh x√°m (grayscale)
    image = Image.open(captcha_path).convert("L")

    # TƒÉng k√≠ch th∆∞·ªõc ·∫£nh captcha ƒë·ªÉ chi ti·∫øt r√µ h∆°n
    image = image.resize((image.width * 2, image.height * 2))

    # TƒÉng ƒë·ªô t∆∞∆°ng ph·∫£n v√† s·ª≠ d·ª•ng b·ªô l·ªçc ƒë·ªÉ l√†m s·∫°ch ·∫£nh captcha
    image = ImageOps.autocontrast(image)
    image = image.filter(ImageFilter.MedianFilter())
    
    # Chuy·ªÉn sang ·∫£nh nh·ªã ph√¢n (ƒëen tr·∫Øng) ƒë·ªÉ d·ªÖ nh·∫≠n di·ªán
    threshold = 180 
    image = image.point(lambda p: p > threshold and 255)

    # L∆∞u ·∫£nh captcha x·ª≠ l√Ω
    processed_path = "processed_captcha.png"
    image.save(processed_path)

    # ƒê·ªçc captcha b·∫±ng pytesseract
    raw_text = pytesseract.image_to_string(
        image,
        config='--psm 8 --oem 3 -c tessedit_char_whitelist=abcdefghijklmnopqrstuvwxyz0123456789'
    ).strip()

    # L·ªçc ch·ªâ l·∫•y c√°c k√Ω t·ª± v√† ƒë·∫£m b·∫£o m√£ Captcha c√≥ 6 k√Ω t·ª± (v√¨ captcha tr√™n trang n√†y c√≥ lu√¥n c√≥ 6 k√Ω t·ª±)
    filtered_text = re.sub(r'[^a-z0-9]', '', raw_text.lower())
    captcha_text = filtered_text[-6:] if len(filtered_text) >= 6 else filtered_text.ljust(6, '_')

    print("M√£ Captcha ƒë·ªçc ƒë∆∞·ª£c:", captcha_text)
    plate_number_input = driver.find_element(By.XPATH, '//*[@id="formBSX"]/div[2]/div[1]/input')
    plate_number_input.send_keys("43A12345")
    vehicle_type_select = driver.find_element(By.XPATH, '//*[@id="formBSX"]/div[2]/div[2]/select')
    select = Select(vehicle_type_select)
    select.select_by_visible_text("√î t√¥")

    # ƒêi·ªÅn m√£ captcha v√†o input
    captcha_input = driver.find_element(By.NAME, "txt_captcha")
    captcha_input.send_keys(captcha_text)
    # Nh·∫•n n√∫t t√¨m ki·∫øm
    search_button = driver.find_element(By.XPATH, '//*[@id="formBSX"]/div[2]/input[1]')
    search_button.click()
    time.sleep(5)  # ƒê·ª£i k·∫øt qu·∫£

    try:
        result_div = driver.find_element(By.XPATH, '//*[@id="bodyPrint123"]')
        result_text = result_div.text.strip()

        if result_text:
            print("üîç K·∫øt qu·∫£ ph·∫°t ngu·ªôi:\n")
            print(result_text)
        else:
            print("‚ùå Kh√¥ng c√≥ k·∫øt qu·∫£ ph·∫°t ngu·ªôi.")
    except Exception as e:
        print("‚ùå L·ªói khi l·∫•y k·∫øt qu·∫£ ph·∫°t ngu·ªôi:", e)

except Exception as e:
    print("‚ùå L·ªói:", e)

finally:
    driver.quit()
    for f in [captcha_path, processed_path]:
        if os.path.exists(f):
            os.remove(f)
